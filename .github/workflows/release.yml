name: Release

on:
  # Run workflow on every push to the main branch with tag `*`
  push:
    tags:
      - '*' 
  # Run workflow manually
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'

    runs-on: ${{ matrix.settings.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable 
        with:
          # Those targets are only used on macos runners.
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
          
      - name: Rust cache
        uses: swatinem/rust-cache@v2.8.0 # fixed version
        with:
          workspaces: './src-tauri -> target'

      - name: Install pnpm
        uses: pnpm/action-setup@v4.1.0 # fixed version
        id: pnpm-install

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4.4.0 # fixed version
        with:
          node-version: 'lts/*'
          cache: 'pnpm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0.5.22 # fixed version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: 'MATE v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: |
            - [CHANGELOG](https://github.com/angelespejo/macos-app-trial-extender/tree/main/CHANGELOG.md#${{ github.ref_name }})
            - [Report issue](https://github.com/angelespejo/macos-app-trial-extender/issues)

            > [!CAUTION]
            > The **Silicon** application is currently broken, so two possible solutions are recommended:
            > - Install the macOS **x86** version, which works on both Intel (x86) Macs and Apple Silicon Macs with Rosetta 2.
            > - Download **DMG** and run [(#ref)](https://github.com/angelespejo/macos-app-trial-extender/pull/1#issuecomment-3175667453): 
            > ```bash
            > codesign -f -s - /Applications/MATE.app/Contents/MacOS/MATE
            > xattr -dr com.apple.quarantine /Applications/MATE.app/Contents/MacOS/MATE
            > ```

            ðŸ‘‡ **Download the app** ðŸ‘‡
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          updaterJsonKeepUniversal: true
          includeRelease: true
          args: ${{ matrix.settings.args }}
